/* PegaDevice.h */
//================================================================================
// BOOST SOFTWARE LICENSE
//
// Copyright 2020 BitWise Laboratories Inc.
// Author.......Jim Waschura
// Contact......info@bitwiselabs.com
//
//Permission is hereby granted, free of charge, to any person or organization
//obtaining a copy of the software and accompanying documentation covered by
//this license (the "Software") to use, reproduce, display, distribute,
//execute, and transmit the Software, and to prepare derivative works of the
//Software, and to permit third-parties to whom the Software is furnished to
//do so, all subject to the following:
//
//The copyright notices in the Software and this entire statement, including
//the above license grant, this restriction and the following disclaimer,
//must be included in all copies of the Software, in whole or in part, and
//all derivative works of the Software, unless such copies or derivative
//works are solely in the form of machine-executable object code generated by
//a source language processor.
//
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
//SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
//FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
//ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
//DEALINGS IN THE SOFTWARE.
//================================================================================

#ifndef BITWISE_PEGA_DEVICE
#define BITWISE_PEGA_DEVICE

#include "BitwiseDevice.h"
#include "autogenPega.h"

class PegaDevice :
   public BitwiseDevice
{
	public:
	typedef BitwiseDevice base;

	PegaDevice() :
		Tub(this, "Tub:"),
		PG(this, "PG:"),
		Clk(this,"Clk:"),
		Acc(this,"Acc:"),
		Acc2(this,"Clk:Acc:"),
		ED(this,"ED:"),
		Err(this,"Err:"),
		Eye(this,"Eye:"),
		Patt(this,"Patt:"),
		Syn(this,"Syn:")
		{}

	virtual ~PegaDevice();

	double getTemperatureC(int averages=5); /* Adc TEMPERATURE */

	public:

	BranchTub Tub;
	BranchPG PG;
	BranchClk Clk;
	BranchAcc Acc;
	BranchAcc Acc2;
	BranchED ED;
	BranchErr Err;
	BranchEye Eye;
	BranchPatt Patt;
	BranchSyn Syn;
};

	//================================================================================
	//================================================================================


#endif // BITWISE_PEGA_DEVICE
